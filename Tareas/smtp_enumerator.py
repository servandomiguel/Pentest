#!/usr/bin/python3

import socket, argparse

def vrfy_method(ht,pt,ul):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    connect = s.connect((ht, pt))

    print('\n' + s.recv(1024).decode('utf-8'))

    print('Existing users(VRFY):')
    for u in ul:
        s.send("VRFY ".encode() + u.strip().encode() + "\r\n".encode())
        rsp = s.recv(1024).decode('utf-8')
        if not( 'user unknown' in rsp.lower()) and u != '\n':
            print("{0}".format(u.strip()))
    
    print()


def rcpt_method(ht,pt,ul):
    
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    connect = s.connect((ht, pt))
    
    print('\n' + s.recv(1024).decode('utf-8'))

    s.send('HELO x\r\n'.encode())
    rsp = s.recv(1024).decode('utf-8')

    s.send('MAIL FROM:test@test.org\r\n'.encode())
    rsp = s.recv(1024).decode('utf-8')

 
    print('Existing users(RCPT):')
    
    for u in ul:
        s.send("RCPT TO:".encode() + u.strip().encode() + "\r\n".encode())
        rsp = s.recv(1024).decode('utf-8')
        if not( 'user unknown' in rsp.lower()) and u != '\n':
            print("{0}".format(u.strip()))
    
    print()


def get_users(fl):
    with open(fl,'r') as uf:
        content = uf.readlines()

    return content

def arg_parse():
    
    parser = argparse.ArgumentParser(description="User Enumeration [SMTP]", epilog="By Jesus E Pacheco F [Sv4r3]") 
    parser.add_argument('-m', '--method', default='VRFY', type=str, required=False, dest='mthd', help='Method to enumerate')
    parser.add_argument('-p', '--port', default=25, type=int, required=False, dest='port', help='SMTP Port.')
    parser.add_argument('-f', '--users_file', default=None, type=str, required=True, dest='users_list', help='User list file.')
    parser.add_argument('-s', '--server', default=None, type=str, required=True, dest='hostt', help='Server')

    return parser.parse_args()


if __name__ == '__main__':
    options = arg_parse()
    
    users = get_users(options.users_list)
    
    if options.mthd == 'VRFY':
        vrfy_method(options.hostt,options.port,users)
    elif options.mthd == 'RCPT':
        rcpt_method(options.hostt, options.port, users)
    else:
        print('Unknown method')
